     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                                            
    12                                  ;A,B words. obtain dword c such that:
    13                                  ;bits 0-4 of C are 1
    14                                  ;bits 5-11 of C are the same with the bits 0-6 of A
    15                                  ;bits 16-31 of C have the following value 0000000001100101b
    16                                  ;bits 12-15 of C are the same with the bits 8-11 of B                     
    17                                                        
    18                                                            
    19                                  ; our data is declared here (the variables needed by our program)
    20                                  segment data use32 class=data
    21                                      ; ...
    22                                      
    23 00000000 1206                        a dw 0000011000010010b
    24 00000002 071B                        b dw 0001101100000111b
    25 00000004 00000000                    c dd 0
    26                                      
    27                                  
    28                                  ; our code starts here
    29                                  segment code use32 class=code
    30                                      start:
    31                                          ; ...
    32                                          
    33                                          ;c ->0000 0000 0110 0101 1011 0010 0101 1111
    34                                          
    35                                          ;c)bits 16-31 of C have the following value 0000000001100101b
    36 00000000 66B86500                        mov ax, 0000000001100101b
    37 00000004 B110                            mov cl, 16
    38 00000006 D3E0                            shl eax, cl
    39                                          
    40                                          ;a) bits 0-4 of C are 1
    41 00000008 6683C81F                        or ax, 0000000000011111b 
    42                                          
    43                                          ;b) bits 5-11 of C are the same with the bits 0-6 of A
    44 0000000C 668B1D[00000000]                mov bx, [a]
    45 00000013 6683E312                        and bx, 0000000000010010b
    46 00000017 B105                            mov cl, 5
    47 00000019 66D3E3                          shl bx, cl ; shift bits 0-6 of A to position 5-11 
    48 0000001C 6609D8                          or ax, bx 
    49                                          
    50                                          ;d)bits 12-15 of C are the same with the bits 8-11 of B  
    51 0000001F 668B1D[02000000]                mov bx, [b]
    52 00000026 6681E3001B                      and bx, 0001101100000000b
    53 0000002B B104                            mov cl, 4
    54 0000002D 66D3E3                          shl bx, cl ; shift bits 8-11 of B to position 12-15 
    55 00000030 6609D8                          or ax, bx
    56                                  
    57 00000033 A3[04000000]                    mov [c], eax
    58                                          
    59                                          
    60                                          
    61                                          ; exit(0)
    62 00000038 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    63 0000003A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
